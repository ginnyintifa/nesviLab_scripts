library(biomaRt)
library(data.table)
library(dplyr)
library(magrittr)
TMTI_input_filename = "Z:/cptac/AML/cohort/Proteome/tmt-report/ratio_gene_MD.tsv"
output_filename = "G:/My Drive/nesviLab_scripts/aml_tidy_prot.tsv"
prot = fread(TMTI_input_filename,
stringsAsFactors = F, data.table = F)
output_filename = "G:/My Drive/nesviLab_scripts/aml_tidy_prot_biomaRt.tsv"
prot = fread(TMTI_input_filename,
stringsAsFactors = F, data.table = F)
human = useMart("ensembl", dataset =  "hsapiens_gene_ensembl")
prot[1,1:10]
gid = gsub("\\..*", "", prot$Index)
gid
gn_symbol = getBM(attributes = c("hgnc_symbol", "ensembl_gene_id"),
filters = "ensembl_gene_id",
values = gid,
mart = human)%>%
dplyr::group_by(ensembl_gene_id)%>%
dplyr::filter(row_number() == 1)%>%
dplyr::mutate(hgnc_symbol = ifelse(nchar(hgnc_symbol)<1, ensembl_gene_id, hgnc_symbol))
gn_symbol
prot_tidy = prot%>%
dplyr::mutate(ensg = gid)%>%
dplyr::left_join(gn_symbol, by = c("ensg" = "ensembl_gene_id"))%>%
dplyr::select(hgnc_symbol, ensg,everything())%>%
dplyr::mutate(hgnc_symbol = ifelse(is.na(hgnc_symbol), Index, hgnc_symbol))%>%
dplyr::select(-ensg)%>%
dplyr::select(-Index)%>%
dplyr::select(-NumberPSM)%>%
dplyr::select(-ProteinID)%>%
dplyr::select(-MaxPepProb)%>%
dplyr::select(-ReferenceIntensity)%>%
dplyr::group_by(hgnc_symbol)%>%
dplyr::summarise_if(is.numeric, mean, na.rm = T)%>%
dplyr::ungroup()%>%
as.data.frame()%>%
dplyr::mutate_all(~ifelse(is.nan(.), NA, .))
write.table(prot_tidy, output_filename,
quote = F, row.names = F, sep = "\t")
prot_tidy[1,1:10]
prot[1,1:10]
colnames(prot_tidy)
prot_tidy[1,1:10]
sel_sample = NULL
length(sel_sample)
if(length(sel_sample)>0)
{
prot_tidy = prot_tidy[, c("hgnc_symbol", sel_sample)]
}
colnames(prot_tidy)[1] = "Gene_name"
write.table(prot_tidy, output_filename,
quote = F, row.names = F, sep = "\t")
globalProteome_tidyUp_biomaRt = function(TMTI_input_filename,
sel_sample,
output_filename)
{
#
# TMTI_input_filename = "Z:/cptac/AML/cohort/Proteome/tmt-report/ratio_gene_MD.tsv"
# output_filename = "G:/My Drive/nesviLab_scripts/aml_tidy_prot_biomaRt.tsv"
# sel_sample = NULL
#
#
prot = fread(TMTI_input_filename,
stringsAsFactors = F, data.table = F)
human = useMart("ensembl", dataset =  "hsapiens_gene_ensembl")
gid = gsub("\\..*", "", prot$Index)
gn_symbol = getBM(attributes = c("hgnc_symbol", "ensembl_gene_id"),
filters = "ensembl_gene_id",
values = gid,
mart = human)%>%
dplyr::group_by(ensembl_gene_id)%>%
dplyr::filter(row_number() == 1)%>%
dplyr::mutate(hgnc_symbol = ifelse(nchar(hgnc_symbol)<1, ensembl_gene_id, hgnc_symbol))
prot_tidy = prot%>%
dplyr::mutate(ensg = gid)%>%
dplyr::left_join(gn_symbol, by = c("ensg" = "ensembl_gene_id"))%>%
dplyr::select(hgnc_symbol, ensg,everything())%>%
dplyr::mutate(hgnc_symbol = ifelse(is.na(hgnc_symbol), Index, hgnc_symbol))%>%
dplyr::select(-ensg)%>%
dplyr::select(-Index)%>%
dplyr::select(-NumberPSM)%>%
dplyr::select(-ProteinID)%>%
dplyr::select(-MaxPepProb)%>%
dplyr::select(-ReferenceIntensity)%>%
dplyr::group_by(hgnc_symbol)%>%
dplyr::summarise_if(is.numeric, mean, na.rm = T)%>%
dplyr::ungroup()%>%
as.data.frame()%>%
dplyr::mutate_all(~ifelse(is.nan(.), NA, .))
if(length(sel_sample)>0)
{
prot_tidy = prot_tidy[, c("hgnc_symbol", sel_sample)]
}
colnames(prot_tidy)[1] = "Gene_name"
write.table(prot_tidy, output_filename,
quote = F, row.names = F, sep = "\t")
}
